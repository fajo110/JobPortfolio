/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication3;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Scanner;
import java.util.Random;
import javax.swing.JFrame; //This is Importing the Main commands, such as HashTable and Array List.

/**
 *
 * @author Farjad Abbas
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        setTitle("Employee Database");
        setBackground(new java.awt.Color(102, 102, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(51, 102, 255));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose Command");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerifyInputWhenFocusTarget(false);

        jButton1.setText("Use Backup");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("New Employee");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Show Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Change Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Calculate Pay");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Remove Employee");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Backup File");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setAction(jButton8.getAction());
        jButton8.setText("Exit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
                pressed_jButton8(evt);
            }
        });

        jLabel2.setText("Employee ID:");

        jLabel3.setText("First Name:");

        jLabel4.setText("Last Name:");

        jLabel5.setText("Gender(M or F):");

        jLabel6.setText("Deduction Rate(%):");

        jLabel7.setText("Annual Salary($):");

        jLabel8.setText("Hourly Wage($):");

        jLabel9.setText("Hrs Per Week:");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel10.setText("Weeks Per Year:");

        jButton9.setText("Clear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel11.setText("Job Type:");

        jLabel12.setText("Gross Pay ($):");

        jLabel13.setText("Net Pay($):");

        jLabel14.setFont(new java.awt.Font("BankGothic Lt BT", 0, 12)); // NOI18N
        jLabel14.setText("Designed by:");

        jLabel15.setFont(new java.awt.Font("BankGothic Lt BT", 0, 12)); // NOI18N
        jLabel15.setText("James Ji");

        jLabel16.setFont(new java.awt.Font("BankGothic Lt BT", 0, 12)); // NOI18N
        jLabel16.setText("Farjad Abbas");

        jLabel17.setFont(new java.awt.Font("BankGothic Lt BT", 0, 12)); // NOI18N
        jLabel17.setText("Hassaan Khawar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(77, 77, 77))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField11)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel10))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7)
                                        .addGap(1, 1, 1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(jButton9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel15))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(jLabel17)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton9))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Creates Hash Table
    Table Hash = new Table();
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //Put the backup file's data into the hash table
       useBackup(Hash.getHash());
       this.jLabel1.setText("Backup being used");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
			//Get the employee ID number from user and search hashtable for employee
						FullTime Worker = (FullTime) getHash(Hash.getHash(), this.jTextField2.getText());
                                                //Show all data of employee if found
                                                this.jTextField1.setText("FullTime");
                                                this.jTextField3.setText(Worker.getFirstName());
                                                this.jTextField4.setText(Worker.getLastName());
                                                this.jTextField5.setText(String.valueOf(Worker.getSex()));
                                                this.jTextField6.setText(Double.toString(Worker.getDeductionRate()));
                                                this.jTextField7.setText(Double.toString(Worker.getAnnualSalary()));
                                                this.jTextField8.setText("");
                                                this.jTextField9.setText("");
                                                this.jTextField10.setText("");
                                                this.jTextField11.setText("");
        this.jTextField12.setText("");
                                                
					} catch (java.lang.ClassCastException e) {
                                                //Get the employee ID number from user and search hashtable for employee
                                                PartTime Worker = (PartTime) getHash(Hash.getHash(), this.jTextField2.getText());
                                                //Show all data of employee if found
                                                this.jTextField1.setText("PartTime");
                                            this.jTextField3.setText(Worker.getFirstName());
						this.jTextField4.setText(Worker.getLastName());
                                                this.jTextField5.setText(String.valueOf(Worker.getSex()));
                                                this.jTextField6.setText(Double.toString(Worker.getDeductionRate()));
                                                this.jTextField7.setText("");
                                                this.jTextField8.setText(Double.toString(Worker.getHourlyWage()));
                                                this.jTextField9.setText(Double.toString(Worker.getHrsPerWeek()));
                                                this.jTextField10.setText(Integer.toString(Worker.getWeeksPerYear()));
                                                this.jTextField11.setText("");
        this.jTextField12.setText("");
                                                
					} 
        
                
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        //Set all text field to blank
        this.jTextField1.setText("");
        this.jTextField2.setText("");                                        
        this.jTextField3.setText("");
        this.jTextField4.setText("");
        this.jTextField5.setText("");
        this.jTextField6.setText("");
        this.jTextField7.setText("");
        this.jTextField8.setText("");
        this.jTextField9.setText("");
        this.jTextField10.setText("");
        this.jTextField11.setText("");
        this.jTextField12.setText("");
        this.jLabel1.setText("Choose Command");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Create a new employee in the hashtable
        //Check if user wants to enter data for full-time or part-time employee                                        
        if (this.jTextField1.getText().equals("FullTime"))
        {
            //Get all data for full time employee from user
            String First = this.jTextField3.getText();
            String Last = this.jTextField4.getText();
            char gender = this.jTextField5.getText().charAt(0);
            double salary=Double.parseDouble(this.jTextField7.getText());
            double deduct=Double.parseDouble(this.jTextField6.getText());
            int is = 0;
			while(is==0)
			{
				//Keep trying to constuct an employee ID number until a number with no existing duplicate is found
				is = 1;
				int identity=randEmpNum(Hash.getHash());

				if (identity==-1)
				{
					is=0;
				}
				else
				{
					//After usable ID number is found, output to user employee ID number and add the employee data into the hashtable
					FullTime Worker = new FullTime (First,Last,gender,identity,salary,deduct);
					this.jTextField2.setText(Integer.toString(identity));  
					Hash.getHash().get(identity%5).add(Worker);
				}
                                this.jLabel1.setText("New Employee Has Been Generated");
			}
        }
        else if (this.jTextField1.getText().equals("PartTime"))
        {
            //Get all data for full time employee from user
            String First = this.jTextField3.getText();
            String Last = this.jTextField4.getText();
            char gender = this.jTextField5.getText().charAt(0);
            double wage=Double.parseDouble(this.jTextField8.getText());
            double hours=Double.parseDouble(this.jTextField9.getText());
            int weeks=Integer.parseInt(this.jTextField10.getText());
            double deduct=Double.parseDouble(this.jTextField6.getText());
            int is = 0;
			while(is==0)
			{
				//Keep trying to constuct an employee ID number until a number with no existing duplicate is found
				is = 1;
				int identity=randEmpNum(Hash.getHash());

				if (identity==-1)
				{
					is=0;
				}
				else
				{
					//After usable ID number is found, output to user employee ID number and add the employee data into the hashtable
					PartTime Worker = new PartTime (First,Last,gender,identity,wage,hours,weeks,deduct);
					this.jTextField2.setText(Integer.toString(identity));  
					Hash.getHash().get(identity%5).add(Worker);
				}
			}
                        this.jLabel1.setText("New Employee Has Been Generated");
        }
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		 //Get the employee ID number from user                                         
		int identity=Integer.parseInt(this.jTextField2.getText());

                //If found, remove the employee from hash table
		for (int i = 0; i<Hash.getHash().get(identity%5).size();i++)
		{
			if (identity==Hash.getHash().get(identity%5).get(i).getEmpNumber())
			{
				//Remove employee
				Hash.getHash().get(identity%5).remove(i);
			}
		}

        //Create new employee with same ID number to simulate changing information
        if (this.jTextField1.getText().equals("FullTime"))
        {
            String First = this.jTextField3.getText();
            String Last = this.jTextField4.getText();
            char gender = this.jTextField5.getText().charAt(0);
            double salary=Double.parseDouble(this.jTextField7.getText());
            double deduct=Double.parseDouble(this.jTextField6.getText());
            FullTime Worker = new FullTime (First,Last,gender,identity,salary,deduct);
            this.jTextField2.setText(Integer.toString(identity));  
            Hash.getHash().get(identity%5).add(Worker);
				
        }
        else if (this.jTextField1.getText().equals("PartTime"))
        {
            String First = this.jTextField3.getText();
            String Last = this.jTextField4.getText();
            char gender = this.jTextField5.getText().charAt(0);
            double wage=Double.parseDouble(this.jTextField8.getText());
            double hours=Double.parseDouble(this.jTextField9.getText());
            int weeks=Integer.parseInt(this.jTextField10.getText());
            double deduct=Double.parseDouble(this.jTextField6.getText());
            PartTime Worker = new PartTime (First,Last,gender,identity,wage,hours,weeks,deduct);
            this.jTextField2.setText(Integer.toString(identity));  
            Hash.getHash().get(identity%5).add(Worker);
        }
        this.jLabel1.setText("Information has Changed Successfully");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
		//Get the employee ID number from user                           
		int identity=Integer.parseInt(this.jTextField2.getText());

                //Find and remove employee from hash table
		for (int i = 0; i<Hash.getHash().get(identity%5).size();i++)
		{
			if (identity==Hash.getHash().get(identity%5).get(i).getEmpNumber())
			{
				//Remove employee
				Hash.getHash().get(identity%5).remove(i);
			}
		}
                this.jLabel1.setText("Employee Removed Successfully");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       //Get the employee ID number from user                                  
        int identity=Integer.parseInt(this.jTextField2.getText());

        //Find employee, then calculate and show employee's gross and net payment if found
        for (int i = 0; i<Hash.getHash().get(identity%5).size();i++)
		{
			if (identity==Hash.getHash().get(identity%5).get(i).getEmpNumber())
			{
				//Show employee's gross and net payment if found
				try {
					FullTime Worker = (FullTime) Hash.getHash().get(identity%5).get(i);
                                        this.jTextField11.setText(Double.toString(Worker.getAnnualSalary()));
                                        this.jTextField12.setText(Double.toString(Worker.getAnnualSalary()*(100-Worker.getDeductionRate())/100));
				} catch (java.lang.ClassCastException e) {
					PartTime Worker = (PartTime) Hash.getHash().get(identity%5).get(i);
                                        this.jTextField11.setText(Double.toString(Worker.getHourlyWage()*Worker.getHrsPerWeek()*Worker.getWeeksPerYear()));
                                        this.jTextField12.setText(Double.toString(Worker.getHourlyWage()*Worker.getHrsPerWeek()*Worker.getWeeksPerYear()*(100-Worker.getDeductionRate())/100));
					} 
			}
		}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       //Backup the hashtable in an ASCII text file                                      
        Backup(Hash.getHash());
        this.jLabel1.setText("System Successfully backed up");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Backup the hashtable in an ASCII text file (and exits program)
        Backup(Hash.getHash());                            
        System.exit(0);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void pressed_jButton8(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressed_jButton8
        
    }//GEN-LAST:event_pressed_jButton8

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed


     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
   
    public static int randEmpNum(Hashtable<Integer, ArrayList<Employee>> Hash)
	{
		//Generates a random 6 digit integer and returns -1 if there is a duplicate in the hashtable
		int duplicate=0;
		Random randomGenerator = new Random();
		int identity = randomGenerator.nextInt(900000)+100000;
		for (int i = 0; i < 5 ; i++)
		{
			for (int j = 0; j<Hash.get(i).size();i++)
			{
				if (identity==Hash.get(i).get(j).getEmpNumber())
				{
					duplicate=1;
				}
			}
		}
		if (duplicate==0)
		{
			return identity;
		}
		else
		{
			return (-1);
		}
	}

	public static void useBackup(Hashtable<Integer, ArrayList<Employee>> Hash)
	{
		String Word=null;
		BufferedReader in = null;

		//Reads the back file for employees until there are no employees left
		try {
			in = new BufferedReader(new FileReader("J:\\Work\\src\\EmployeeData.txt"));//Here is the backup file
                                                                                                   //location
			while (in.ready()){

				try {
					Word=in.readLine();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} 

				if (Word.equals("Full"))
				{
					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					String First=Word;

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					String Second=Word;

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					char gender = Word.charAt(0);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					int identity=Integer.parseInt(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					double salary=Double.parseDouble(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					double deduct=Double.parseDouble(Word);

					//Put the full-time worker data into the hash table
					Employee Worker = new FullTime (First,Second,gender,identity,salary,deduct);
					Hash.get(identity%5).add(Worker);
				}
				else if (Word.equals("Part"))
				{
					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					String First=Word;

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					String Second=Word;

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					char gender = Word.charAt(0);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					int identity=Integer.parseInt(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					double wage=Double.parseDouble(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					double hours=Double.parseDouble(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					int weeks=Integer.parseInt(Word);

					try {
						Word=in.readLine();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} 
					double deduct=Double.parseDouble(Word);

					//Put the part-time worker data into the hash table
					Employee Worker = new PartTime (First,Second,gender,identity,wage,hours,weeks,deduct);
					Hash.get(identity%5).add(Worker);
				}
			}
			System.out.println("Backup now being used.");
			in.close();
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

   public static void Backup(Hashtable<Integer, ArrayList<Employee>> Hash) 
    {
	 try {
			FileWriter fstream = new FileWriter("J:\\Work\\src\\EmployeeData.txt");//Here is the backup file
                                                                                               //location
			BufferedWriter out = new BufferedWriter(fstream);

			//Goes through hashtable and writes every employee data in the backup file in a specific file format
			for (int i = 0; i < 5 ; i++)
			{
				for (int j = 0; j<Hash.get(i).size();i++)
				{
					try {
						FullTime Worker = (FullTime) Hash.get(i).get(j);
						out.write("Full");
						out.newLine();

						out.write(Worker.getFirstName());
						out.newLine();

						out.write(Worker.getLastName());
						out.newLine();

						out.write(Worker.getSex());
						out.newLine();

						String Identity = Integer.toString(Worker.getEmpNumber());
						out.write(Identity);
						out.newLine();

						String Salary = Double.toString(Worker.getAnnualSalary());
						out.write(Salary);
						out.newLine();

						String Deduct = Double.toString(Worker.getDeductionRate());
						out.write(Deduct);
						out.newLine();

					} catch (java.lang.ClassCastException e) {
						PartTime Worker = (PartTime) Hash.get(i).get(j);
						out.write("Part");
						out.newLine();

						out.write(Worker.getFirstName());
						out.newLine();

						out.write(Worker.getLastName());
						out.newLine();

						out.write(Worker.getSex());
						out.newLine();

						String Identity = Integer.toString(Worker.getEmpNumber());
						out.write(Identity);
						out.newLine();

						String Wage = Double.toString(Worker.getHourlyWage());
						out.write(Wage);
						out.newLine();

						String Hours = Double.toString(Worker.getHrsPerWeek());
						out.write(Hours);
						out.newLine();

						String Weeks = Integer.toString(Worker.getWeeksPerYear());
						out.write(Weeks);
						out.newLine();

						String Deduct = Double.toString(Worker.getDeductionRate());
						out.write(Deduct);
						out.newLine();
					}
				}
			}
			System.out.println("System successfully backed up.");
			out.close();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
    }

	public static Employee getHash(Hashtable<Integer, ArrayList<Employee>> Hash, String Word)
	{
		//Get the employee ID number from user
		int identity=Integer.parseInt(Word);
		

		//Search hashtable for employee
		for (int i = 0; i<Hash.get(identity%5).size();i++)
		{
			if (identity==Hash.get(identity%5).get(i).getEmpNumber())
			{
                            
				return Hash.get(identity%5).get(i);
                                
			}
		}

		return null;
	}

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
